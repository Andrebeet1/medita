const express = require('express');
const router = express.Router();
const axios = require('axios');

router.post('/generate', async (req, res) => {
  try {
    // üîç V√©rifier que la cl√© API est bien charg√©e
    console.log("üîê COHERE_API_KEY =", process.env.COHERE_API_KEY);

    const prompt = `G√©n√®re 20 m√©ditations chr√©tiennes en fran√ßais dans ce format clair et structur√© :

1. üåø Titre : [titre]
üìñ Verset biblique

[Texte du verset]
‚Äî [R√©f√©rence]

üôè Pri√®re

[Texte de la pri√®re]

üí¨ Citation inspirante

[Texte de la citation]
‚Äî [Auteur ou r√©f√©rence]

Th√®mes vari√©s : Esp√©rance, Foi, Paix, etc.`;

    const response = await axios.post('https://api.cohere.ai/v1/chat', {
      message: prompt,
      model: 'command-r',
    }, {
      headers: {
        'Authorization': `Bearer ${process.env.COHERE_API_KEY}`,
        'Content-Type': 'application/json',
      }
    });

    const rawText = response.data.text || '';

    const meditationBlocks = rawText.split(/\n(?=\d+\.\s*üåø)/).filter(Boolean);

    const notes = meditationBlocks.map(block => {
      const titreMatch = block.match(/üåø Titre\s*:\s*(.+)/);
      const versetMatch = block.match(/üìñ Verset biblique\s*([\s\S]*?)üôè/);
      const priereMatch = block.match(/üôè Pri√®re\s*([\s\S]*?)üí¨/);
      const citationMatch = block.match(/üí¨ Citation inspirante\s*([\s\S]*)/);

      return {
        titre: titreMatch ? titreMatch[1].trim() : '',
        verset: versetMatch ? versetMatch[1].trim() : '',
        priere: priereMatch ? priereMatch[1].trim() : '',
        citation: citationMatch ? citationMatch[1].trim() : ''
      };
    }).filter(note => note.titre && note.verset);

    res.status(200).json({ notes });

  } catch (error) {
    console.error('‚ùå Erreur Cohere :', error.message);
    if (error.response) {
      console.error('D√©tails API Cohere :', error.response.data);
    }
    res.status(500).json({ error: "Erreur lors de la g√©n√©ration." });
  }
});

module.exports = router;
